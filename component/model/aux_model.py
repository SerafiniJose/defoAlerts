from sepal_ui import model
from traitlets import Any

from component import parameter as cp
from component.message import cm


class AuxModel(model.Model):

    ############################################################################
    # optional auxiliary files that advanced users can input
    ############################################################################
    ccdc_layer = Any(None).tag(sync=True)
    "ccdc alerts generated by the users"

    mask_layer = Any(None).tag(sync=True)
    "layer to mask out alerts, for example, forest no forest"

    aux_layer = Any(None).tag(sync=True)
    "auxiliary layer that the user can visualize during alert analysis, for example, forest plantation or forest management areas"

    aux_layer_vis = Any(None).tag(sync=True)
    "auxiliary layer visualization parameters"

    custom_report_template = Any(None).tag(sync=True)
    "User custom template for reports"

    ############################################################################
    # planet credentials
    ############################################################################

    def export_dictionary(self):
        dictionary = {
            "ccdc_layer": self.ccdc_layer,
            "mask_layer": self.mask_layer,
            "aux_layer": self.aux_layer,
            "aux_layer_vis": self.aux_layer_vis,
            "custom_report_template": self.custom_report_template,
        }
        return dictionary

    def import_from_dictionary(self, file_path):
        """
        Import class attributes from a JSON file.
        Args:
            file_path (str): Path to the JSON file.
        """
        try:
            # with open(file_path, 'r') as f:
            #     data = json.load(f)
            data = file_path
            # Update attributes
            self.ccdc_layer = data.get("ccdc_layer", self.ccdc_layer)
            self.mask_layer = data.get("mask_layer", self.mask_layer)
            self.aux_layer = data.get("aux_layer", self.aux_layer)
            self.aux_layer_vis = data.get("aux_layer_vis", self.aux_layer_vis)
            self.custom_report_template = data.get(
                "custom_report_template", self.custom_report_template
            )

        except (FileNotFoundError, json.JSONDecodeError) as e:
            print(f"Error loading JSON file: {e}")
